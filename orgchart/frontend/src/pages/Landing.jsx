import React, { useState, useEffect } from 'react';
import { Home, Users, Clock, Trophy, Package, Plane, Calendar } from 'lucide-react';
import ViewSwitcher from '../components/ui/ViewSwitcher';
import PageHeader from '../components/ui/PageHeader';
import api from '../services/api';
import { useAuth } from '../contexts/AuthContext';
import { useLocation, useNavigate } from 'react-router-dom';
import { getPointsText } from '../utils/dateUtils';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–∞—à–±–æ—Ä–¥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
const DashboardView = ({ employees, products, vacations, topRating = [] }) => {
  return (
    <div className="space-y-6">
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <div className="bg-white rounded-[15px] border border-gray/50 p-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-2">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
        <p className="text-gray-600">–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤—Å—é –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏</p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-white rounded-[15px] border border-gray/50 p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-600">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</p>
              <p className="text-2xl font-bold text-gray-900">{employees.length}</p>
            </div>
            <div className="w-12 h-12 bg-blue-100 rounded-[12px] flex items-center justify-center">
              <Users className="w-6 h-6 text-blue-600" />
            </div>
          </div>
        </div>
        
        <div className="bg-white rounded-[15px] border border-gray/50 p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-600">–ü—Ä–æ–¥—É–∫—Ç–æ–≤</p>
              <p className="text-2xl font-bold text-gray-900">{products.length}</p>
            </div>
            <div className="w-12 h-12 bg-green-100 rounded-[12px] flex items-center justify-center">
              <Package className="w-6 h-6 text-green-600" />
            </div>
          </div>
        </div>
        
        <div className="bg-white rounded-[15px] border border-gray/50 p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm text-gray-600">–í –æ—Ç–ø—É—Å–∫–µ</p>
              <p className="text-2xl font-bold text-gray-900">{vacations.length}</p>
            </div>
            <div className="w-12 h-12 bg-orange-100 rounded-[12px] flex items-center justify-center">
              <Plane className="w-6 h-6 text-orange-600" />
            </div>
          </div>
        </div>
      </div>

      {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞ */}
      <div className="bg-white rounded-[15px] border border-gray/50 p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold text-gray-900 flex items-center gap-2">
            <Calendar className="w-5 h-5 text-blue-500" />
            –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–ø—É—Å–∫–∞
          </h3>
          <button 
            onClick={() => window.location.href = '/account/vacations'}
            className="text-primary hover:text-primary/80 text-sm font-medium"
          >
            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ ‚Üí
          </button>
        </div>
        <div className="space-y-3">
          {vacations.length > 0 ? (
            vacations.slice(0, 3).map(vacation => (
              <div key={vacation.id} className="flex items-center p-3 rounded-[8px] bg-gray-50">
                <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center mr-3">
                  <Plane className="w-5 h-5 text-orange-600" />
                </div>
                <div className="flex-1">
                  <p className="font-medium text-gray-900">{vacation.employee?.name}</p>
                  <p className="text-sm text-gray-600">
                    {new Date(vacation.startDate).toLocaleDateString('ru-RU')} - {new Date(vacation.endDate).toLocaleDateString('ru-RU')}
                  </p>
                </div>
                <div className="text-right">
                  <span className="text-xs text-gray-500">{vacation.daysCount} –¥–Ω–µ–π</span>
                </div>
              </div>
            ))
          ) : (
            <p className="text-gray-500">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ç–ø—É—Å–∫–æ–≤</p>
          )}
        </div>
      </div>

      {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ */}
      <div className="bg-white rounded-[15px] border border-gray/50 p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold text-gray-900 flex items-center gap-2">
            <Clock className="w-5 h-5 text-green-500" />
            –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
          </h3>
        </div>
        <div className="space-y-3">
          {[
            { id: 1, title: '–ó–∞–ø—É—â–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç', description: 'Product Y —É—Å–ø–µ—à–Ω–æ –≤—ã—à–µ–ª –≤ –ø—Ä–æ–¥–∞–∫—à–Ω', date: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥' },
            { id: 2, title: '–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫', description: '–ö –Ω–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –Ω–æ–≤—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', date: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥' },
            { id: 3, title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã', description: '–í—ã—à–ª–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è CRM-—Å–∏—Å—Ç–µ–º—ã', date: '3 –¥–Ω—è –Ω–∞–∑–∞–¥' }
          ].map(news => (
            <div key={news.id} className="flex items-center p-3 rounded-[8px] bg-gray-50">
              <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center mr-3">
                <span className="text-green-600">üì∞</span>
              </div>
              <div className="flex-1">
                <p className="font-medium text-gray-900">{news.title}</p>
                <p className="text-sm text-gray-600">{news.description}</p>
              </div>
              <div className="text-right">
                <span className="text-xs text-gray-500">{news.date}</span>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* –†–µ–π—Ç–∏–Ω–≥ –∫–æ–º–ø–∞–Ω–∏–∏ */}
      <div className="bg-white rounded-[15px] border border-gray/50 p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold text-gray-900 flex items-center gap-2">
            <Trophy className="w-5 h-5 text-yellow-500" />
            –¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥–∞ –∫–æ–º–ø–∞–Ω–∏–∏
          </h3>
          <button 
            onClick={() => window.location.href = '/account/rating'}
            className="text-primary hover:text-primary/80 text-sm font-medium"
          >
            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö ‚Üí
          </button>
        </div>
        <div className="space-y-3">
          {topRating.length > 0 ? topRating.slice(0, 5).map((emp, index) => (
            <div key={emp.id} className="flex items-center p-3 rounded-[8px] bg-gray-50">
              <div className={`w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm ${
                index === 0 ? 'bg-yellow-400 text-white' :
                index === 1 ? 'bg-gray-300 text-white' :
                index === 2 ? 'bg-orange-400 text-white' :
                'bg-gray-200 text-gray-700'
              }`}>
                {index + 1}
              </div>
              <div className="ml-3 flex-1">
                <p className="font-medium text-gray-900">{emp.name}</p>
                <p className="text-sm text-gray-600">{emp.position}</p>
              </div>
              <div className="text-right">
                <div className="text-2xl font-bold text-gray-900">
                  {getPointsText(emp.totalPoints || 0)}
                </div>
                <div className="text-xs text-gray-500">
                  {emp.achievements || 0} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
                </div>
              </div>
            </div>
          )) : (
            <p className="text-gray-500">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞</p>
          )}
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç "–û –Ω–∞—Å"
const AboutView = ({ products = [] }) => {
  return (
    <div className="space-y-6">
      {/* –ö—Ç–æ –º—ã */}
      <div className="bg-white rounded-[15px] border border-gray/50 p-8">
        <h3 className="text-2xl font-bold text-gray-900 mb-4">–ö—Ç–æ –º—ã</h3>
        <p className="text-lg text-gray-700 leading-relaxed">
          –ú—ã - –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –æ–±—â–µ–π —Ü–µ–ª—å—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è 
          –¥–ª—è –±–∏–∑–Ω–µ—Å–∞. –ù–∞—à–∞ –º–∏—Å—Å–∏—è - –ø–æ–º–æ–≥–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—è–º —Ä–∞—Å—Ç–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.
        </p>
      </div>

      {/* –ß–µ–º –∑–∞–Ω–∏–º–∞–µ–º—Å—è */}
      <div className="bg-white rounded-[15px] border border-gray/50 p-8">
        <h3 className="text-2xl font-bold text-gray-900 mb-4">–ß–µ–º –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h4 className="text-lg font-semibold text-gray-900 mb-2">–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤</h4>
            <p className="text-gray-700">
              –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –≤–µ–±-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, 
              –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –±–∏–∑–Ω–µ—Å—É —Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ.
            </p>
          </div>
          <div>
            <h4 className="text-lg font-semibold text-gray-900 mb-2">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h4>
            <p className="text-gray-700">
              –†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è 
              –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏–π.
            </p>
          </div>
          <div>
            <h4 className="text-lg font-semibold text-gray-900 mb-2">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏</h4>
            <p className="text-gray-700">
              –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–æ–≤ –æ—Ç –∏–¥–µ–∏ –¥–æ –∑–∞–ø—É—Å–∫–∞, 
              –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏.
            </p>
          </div>
          <div>
            <h4 className="text-lg font-semibold text-gray-900 mb-2">HR-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</h4>
            <p className="text-gray-700">
              –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ 
              –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ HR-—Ñ—É–Ω–∫—Ü–∏–π.
            </p>
          </div>
        </div>
      </div>

      {/* –í—ã–∑–æ–≤—ã */}
      <div className="bg-white rounded-[15px] border border-gray/50 p-8">
        <h3 className="text-2xl font-bold text-gray-900 mb-4">–í—ã–∑–æ–≤—ã –ø–µ—Ä–µ–¥ –Ω–∞–º–∏</h3>
        <div className="space-y-4">
          <div className="flex items-start">
            <div className="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center mr-4 mt-1">
              <span className="text-red-600 font-bold">1</span>
            </div>
            <div>
              <h4 className="font-semibold text-gray-900">–¶–∏—Ñ—Ä–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
              <p className="text-gray-700">–ü–æ–º–æ–≥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—è–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ —Ü–∏—Ñ—Ä–æ–≤–æ–π —ç–∫–æ–Ω–æ–º–∏–∫–µ</p>
            </div>
          </div>
          <div className="flex items-start">
            <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mr-4 mt-1">
              <span className="text-blue-600 font-bold">2</span>
            </div>
            <div>
              <h4 className="font-semibold text-gray-900">–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏</h4>
              <p className="text-gray-700">–°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ä—ã–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è –±—É–¥—É—â–µ–≥–æ</p>
            </div>
          </div>
          <div className="flex items-start">
            <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mr-4 mt-1">
              <span className="text-green-600 font-bold">3</span>
            </div>
            <div>
              <h4 className="font-semibold text-gray-900">–£—Å—Ç–æ–π—á–∏–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ</h4>
              <p className="text-gray-700">–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è</p>
            </div>
          </div>
        </div>
      </div>

      {/* –ß—Ç–æ —Å–æ–∑–¥–∞–µ–º */}
      <div className="bg-white rounded-[15px] border border-gray/50 p-8">
        <h3 className="text-2xl font-bold text-gray-900 mb-4">–ß—Ç–æ –º—ã —Å–æ–∑–¥–∞–µ–º</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {products.slice(0, 3).map(product => (
            <div key={product.id} className="text-center">
              <div className="w-16 h-16 bg-gray-100 rounded-[12px] mx-auto mb-4 flex items-center justify-center">
                <span className="text-2xl">üì±</span>
              </div>
              <h4 className="font-semibold text-gray-900 mb-2">{product.name}</h4>
              <p className="text-sm text-gray-600">{product.description}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–∞–π–º–ª–∞–π–Ω–∞
const TimelineView = () => {
  // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Ç–∞–π–º–ª–∞–π–Ω–∞
  const timelineEvents = [
    {
      id: 1,
      date: '2024-12-15',
      title: '–ó–∞–ø—É—Å–∫ Product Y –≤ —Ä–µ–ª–∏–∑',
      description: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—É—Å–∫–æ–≤ –≤—ã—à–ª–æ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω',
      type: 'product',
      icon: 'üì±'
    },
    {
      id: 2,
      date: '2024-12-10',
      title: '–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤ –∫–æ–º–∞–Ω–¥–µ',
      description: '–ö –Ω–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –Ω–æ–≤—ã–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      type: 'team',
      icon: 'üë•'
    },
    {
      id: 3,
      date: '2024-12-05',
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Product X',
      description: '–í—ã—à–ª–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è CRM-—Å–∏—Å—Ç–µ–º—ã',
      type: 'update',
      icon: 'üîÑ'
    },
    {
      id: 4,
      date: '2024-11-28',
      title: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
      description: '–ì–æ–¥–æ–≤–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã',
      type: 'event',
      icon: 'üéâ'
    },
    {
      id: 5,
      date: '2024-11-20',
      title: 'Product Z –ø–æ–ª—É—á–∏–ª –Ω–∞–≥—Ä–∞–¥—É',
      description: '–õ—É—á—à–∞—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≥–æ–¥–∞',
      type: 'award',
      icon: 'üèÜ'
    }
  ].sort((a, b) => new Date(b.date) - new Date(a.date)); // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)

  return (
    <div className="bg-white rounded-[15px] border border-gray/50 p-8">
      <h3 className="text-2xl font-bold text-gray-900 mb-8">–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?</h3>
      
      <div className="relative">
        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è */}
        <div className="absolute left-1/2 transform -translate-x-1/2 w-1 bg-gray-300 h-full"></div>
        
        <div className="space-y-8">
          {timelineEvents.map((event, index) => {
            const isEven = index % 2 === 0;
            return (
              <div key={event.id} className={`relative flex items-center ${isEven ? 'flex-row' : 'flex-row-reverse'}`}>
                {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–±—ã—Ç–∏—è */}
                <div className={`w-5/12 ${isEven ? 'pr-8' : 'pl-8'}`}>
                  <div className="bg-gray-50 rounded-[12px] p-4 border border-gray/50">
                    <div className="flex items-center mb-2">
                      <span className="text-2xl mr-2">{event.icon}</span>
                      <h4 className="font-semibold text-gray-900">{event.title}</h4>
                    </div>
                    <p className="text-sm text-gray-600 mb-2">{event.description}</p>
                    <p className="text-xs text-gray-500">{new Date(event.date).toLocaleDateString('ru-RU')}</p>
                  </div>
                </div>
                
                {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ */}
                <div className="absolute left-1/2 transform -translate-x-1/2 w-4 h-4 bg-blue-500 rounded-full border-2 border-white shadow"></div>
                
                {/* –î–∞—Ç–∞ */}
                <div className={`w-5/12 ${isEven ? 'pl-8' : 'pr-8'}`}>
                  <div className={`text-center ${isEven ? 'text-left' : 'text-right'}`}>
                    <p className="text-lg font-semibold text-gray-900">
                      {new Date(event.date).toLocaleDateString('ru-RU', { 
                        day: 'numeric', 
                        month: 'long' 
                      })}
                    </p>
                    <p className="text-sm text-gray-600">
                      {new Date(event.date).getFullYear()}
                    </p>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
};

export default function Landing() {
  const [activeView, setActiveView] = useState('dashboard');
  const [employees, setEmployees] = useState([]);
  const [products, setProducts] = useState([]);
  const [vacations, setVacations] = useState([]);
  const [topRating, setTopRating] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const { isAuthenticated } = useAuth();
  const location = useLocation();
  const navigate = useNavigate();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–∑ URL
  useEffect(() => {
    const path = location.pathname;
    if (path.includes('/home/hello')) {
      setActiveView('dashboard');
    } else if (path.includes('/home/team-a')) {
      setActiveView('about');
    } else if (path.includes('/home/timeline')) {
      setActiveView('timeline');
    }
  }, [location.pathname]);

  useEffect(() => {
    const loadData = async () => {
      try {
        setLoading(true);
        setError(null);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã) –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const [employeesResponse, productsResponse] = await Promise.all([
          api.getEmployees().catch(err => {
            console.warn('Failed to load employees:', err);
            return { data: [] };
          }),
          api.getProducts().catch(err => {
            console.warn('Failed to load products:', err);
            return { data: [] };
          })
        ]);
        
        setEmployees(employeesResponse.data || employeesResponse || []);
        setProducts(productsResponse.data || productsResponse || []);
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç–ø—É—Å–∫–∞ –∏ —Ä–µ–π—Ç–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
        if (isAuthenticated) {
          try {
            const [vacationsResponse, ratingResponse] = await Promise.all([
              api.getVacations().catch(err => {
                console.warn('Failed to load vacations:', err);
                return { data: [] };
              }),
              api.request('/api/tokens/top').catch(err => {
                console.warn('Failed to load rating:', err);
                return [];
              })
            ]);
            setVacations(vacationsResponse.data || vacationsResponse || []);
            setTopRating(ratingResponse || []);
          } catch (authError) {
            console.warn('Failed to load auth data:', authError);
            setVacations([]);
            setTopRating([]);
          }
        } else {
          setVacations([]);
          setTopRating([]);
        }
      } catch (err) {
        console.error('Error loading landing data:', err);
        setError(err.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
      } finally {
        setLoading(false);
      }
    };

    loadData();
  }, [isAuthenticated]);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const getAvailableViews = () => {
    const baseViews = [
      {
        id: 'about',
        label: '–û –Ω–∞—Å',
        icon: <Users className="w-4 h-4" />
      },
      {
        id: 'timeline',
        label: '–¢–∞–π–º–ª–∞–π–Ω',
        icon: <Clock className="w-4 h-4" />
      }
    ];

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (isAuthenticated) {
      baseViews.unshift({
        id: 'dashboard',
        label: '–ü—Ä–∏–≤–µ—Ç!',
        icon: <Home className="w-4 h-4" />
      });
    }

    return baseViews;
  };

  const views = getAvailableViews();

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å –¥–∞—à–±–æ—Ä–¥, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ "–û –Ω–∞—Å"
  useEffect(() => {
    if (!isAuthenticated && activeView === 'dashboard') {
      setActiveView('about');
    }
  }, [isAuthenticated, activeView]);

  const handleViewChange = (viewId) => {
    setActiveView(viewId);
    const routes = {
      dashboard: '/home/hello',
      about: '/home/team-a',
      timeline: '/home/timeline'
    };
    navigate(routes[viewId]);
  };

  const renderView = () => {
    if (loading) {
      return (
        <div className="flex items-center justify-center h-64">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto"></div>
            <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
          </div>
        </div>
      );
    }

    if (error) {
      return (
        <div className="flex items-center justify-center h-64">
          <div className="text-center">
            <div className="text-red-500 text-xl mb-2">‚ö†Ô∏è</div>
            <p className="text-red-600">{error}</p>
          </div>
        </div>
      );
    }

    switch (activeView) {
      case 'dashboard':
        return <DashboardView employees={employees} products={products} vacations={vacations} topRating={topRating} />;
      case 'about':
        return <AboutView products={products} />;
      case 'timeline':
        return <TimelineView />;
      default:
        return <AboutView products={products} />;
    }
  };

  return (
    <div className="w-full max-w-none mx-auto pt-[70px]">
      {/* –í–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫ */}
      <div className="flex items-center justify-between mb-6 gap-2 sm:gap-4 md:gap-8 flex-wrap">
        <h1 className="text-[32px] font-bold font-accent text-primary pb-4 md:pb-0">–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Ä—Ç–∞–ª</h1>
        <div className="flex items-center gap-2">
          <div className="flex gap-2 bg-gray rounded-[12px] p-1 flex-wrap">
            {views.map((view) => (
              <button
                key={view.id}
                onClick={() => handleViewChange(view.id)}
                className={`flex items-center px-4 py-2 rounded-[8px] font-medium text-sm transition select-none
                  ${activeView === view.id ? 'bg-white text-primary shadow' : 'text-dark hover:bg-secondary hover:text-white'}`}
              >
                {view.icon}
                <span className="ml-[5px]">{view.label}</span>
              </button>
            ))}
          </div>
        </div>
      </div>
      
      {renderView()}
    </div>
  );
} 